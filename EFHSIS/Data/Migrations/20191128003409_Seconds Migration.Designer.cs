// <auto-generated />
using System;
using EFHSIS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFHSIS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191128003409_Seconds Migration")]
    partial class SecondsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Barangay", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BgyDesc")
                        .IsRequired()
                        .HasColumnName("BGY_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Field1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Hc")
                        .HasColumnName("HC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Barangay");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.ChildCare", b =>
                {
                    b.Property<int>("Anechild1259F")
                        .HasColumnName("ANECHILD1259_F")
                        .HasColumnType("int");

                    b.Property<int>("Anechild1259M")
                        .HasColumnName("ANECHILD1259_M")
                        .HasColumnType("int");

                    b.Property<int>("Anechild1259feF")
                        .HasColumnName("ANECHILD1259FE_F")
                        .HasColumnType("int");

                    b.Property<int>("Anechild1259feM")
                        .HasColumnName("ANECHILD1259FE_M")
                        .HasColumnType("int");

                    b.Property<int>("Anechild611F")
                        .HasColumnName("ANECHILD611_F")
                        .HasColumnType("int");

                    b.Property<int>("Anechild611M")
                        .HasColumnName("ANECHILD611_M")
                        .HasColumnType("int");

                    b.Property<int>("Anechild611feF")
                        .HasColumnName("ANECHILD611FE_F")
                        .HasColumnType("int");

                    b.Property<int>("Anechild611feM")
                        .HasColumnName("ANECHILD611FE_M")
                        .HasColumnType("int");

                    b.Property<int>("AnechildfeF")
                        .HasColumnName("ANECHILDFE_F")
                        .HasColumnType("int");

                    b.Property<int>("AnechildfeM")
                        .HasColumnName("ANECHILDFE_M")
                        .HasColumnType("int");

                    b.Property<int>("AnechildnsF")
                        .HasColumnName("ANECHILDNS_F")
                        .HasColumnType("int");

                    b.Property<int>("AnechildnsM")
                        .HasColumnName("ANECHILDNS_M")
                        .HasColumnType("int");

                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Child1259dwF")
                        .HasColumnName("CHILD_1259DW_F")
                        .HasColumnType("int");

                    b.Property<int>("Child1259dwM")
                        .HasColumnName("CHILD_1259DW_M")
                        .HasColumnType("int");

                    b.Property<int>("CicF")
                        .HasColumnName("CIC_F")
                        .HasColumnType("int");

                    b.Property<int>("CicM")
                        .HasColumnName("CIC_M")
                        .HasColumnType("int");

                    b.Property<int>("CpbF")
                        .HasColumnName("CPB_F")
                        .HasColumnType("int");

                    b.Property<int>("CpbM")
                        .HasColumnName("CPB_M")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("DiarrncF")
                        .HasColumnName("DIARRNC_F")
                        .HasColumnType("int");

                    b.Property<int>("DiarrncM")
                        .HasColumnName("DIARRNC_M")
                        .HasColumnType("int");

                    b.Property<int>("DiarrorsF")
                        .HasColumnName("DIARRORS_F")
                        .HasColumnType("int");

                    b.Property<int>("DiarrorsM")
                        .HasColumnName("DIARRORS_M")
                        .HasColumnType("int");

                    b.Property<int>("DiarrorszF")
                        .HasColumnName("DIARRORSZ_F")
                        .HasColumnType("int");

                    b.Property<int>("DiarrorszM")
                        .HasColumnName("DIARRORSZ_M")
                        .HasColumnType("int");

                    b.Property<int>("DiarrortF")
                        .HasColumnName("DIARRORT_F")
                        .HasColumnType("int");

                    b.Property<int>("DiarrortM")
                        .HasColumnName("DIARRORT_M")
                        .HasColumnType("int");

                    b.Property<int>("FicF")
                        .HasColumnName("FIC_F")
                        .HasColumnType("int");

                    b.Property<int>("FicM")
                        .HasColumnName("FIC_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmBcgF")
                        .HasColumnName("IMM_BCG_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmBcgM")
                        .HasColumnName("IMM_BCG_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmDpt1F")
                        .HasColumnName("IMM_DPT1_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmDpt1M")
                        .HasColumnName("IMM_DPT1_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmDpt2F")
                        .HasColumnName("IMM_DPT2_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmDpt2M")
                        .HasColumnName("IMM_DPT2_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmDpt3F")
                        .HasColumnName("IMM_DPT3_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmDpt3M")
                        .HasColumnName("IMM_DPT3_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab124F")
                        .HasColumnName("IMM_HEPAB124_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab124M")
                        .HasColumnName("IMM_HEPAB124_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab1win24F")
                        .HasColumnName("IMM_HEPAB1WIN24_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab1win24M")
                        .HasColumnName("IMM_HEPAB1WIN24_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab2F")
                        .HasColumnName("IMM_HEPAB2_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab2M")
                        .HasColumnName("IMM_HEPAB2_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab3F")
                        .HasColumnName("IMM_HEPAB3_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmHepab3M")
                        .HasColumnName("IMM_HEPAB3_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmMcv1F")
                        .HasColumnName("IMM_MCV1_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmMcv1M")
                        .HasColumnName("IMM_MCV1_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmMcv2F")
                        .HasColumnName("IMM_MCV2_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmMcv2M")
                        .HasColumnName("IMM_MCV2_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmMeasF")
                        .HasColumnName("IMM_MEAS_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmMeasM")
                        .HasColumnName("IMM_MEAS_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmOpv1F")
                        .HasColumnName("IMM_OPV1_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmOpv1M")
                        .HasColumnName("IMM_OPV1_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmOpv2F")
                        .HasColumnName("IMM_OPV2_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmOpv2M")
                        .HasColumnName("IMM_OPV2_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmOpv3F")
                        .HasColumnName("IMM_OPV3_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmOpv3M")
                        .HasColumnName("IMM_OPV3_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmPcv1F")
                        .HasColumnName("IMM_PCV1_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmPcv1M")
                        .HasColumnName("IMM_PCV1_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmPcv2F")
                        .HasColumnName("IMM_PCV2_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmPcv2M")
                        .HasColumnName("IMM_PCV2_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmPcv3F")
                        .HasColumnName("IMM_PCV3_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmPcv3M")
                        .HasColumnName("IMM_PCV3_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmPenta1F")
                        .HasColumnName("IMM_PENTA1_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmPenta1M")
                        .HasColumnName("IMM_PENTA1_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmPenta2F")
                        .HasColumnName("IMM_PENTA2_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmPenta2M")
                        .HasColumnName("IMM_PENTA2_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmPenta3F")
                        .HasColumnName("IMM_PENTA3_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmPenta3M")
                        .HasColumnName("IMM_PENTA3_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmRota1F")
                        .HasColumnName("IMM_ROTA1_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmRota1M")
                        .HasColumnName("IMM_ROTA1_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmRota2F")
                        .HasColumnName("IMM_ROTA2_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmRota2M")
                        .HasColumnName("IMM_ROTA2_M")
                        .HasColumnType("int");

                    b.Property<int>("ImmRota3F")
                        .HasColumnName("IMM_ROTA3_F")
                        .HasColumnType("int");

                    b.Property<int>("ImmRota3M")
                        .HasColumnName("IMM_ROTA3_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf1223mnpF")
                        .HasColumnName("INF1223MNP_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf1223mnpM")
                        .HasColumnName("INF1223MNP_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf1259feF")
                        .HasColumnName("INF1259FE_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf1259feM")
                        .HasColumnName("INF1259FE_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf25lbwfeF")
                        .HasColumnName("INF25LBWFE_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf25lbwfeM")
                        .HasColumnName("INF25LBWFE_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf25lbwnsF")
                        .HasColumnName("INF25LBWNS_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf25lbwnsM")
                        .HasColumnName("INF25LBWNS_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf26feF")
                        .HasColumnName("INF26FE_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf26feM")
                        .HasColumnName("INF26FE_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf26lbwnsF")
                        .HasColumnName("INF26LBWNS_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf26lbwnsM")
                        .HasColumnName("INF26LBWNS_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf611feF")
                        .HasColumnName("INF611FE_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf611feM")
                        .HasColumnName("INF611FE_M")
                        .HasColumnType("int");

                    b.Property<int>("Inf611mnpF")
                        .HasColumnName("INF611MNP_F")
                        .HasColumnType("int");

                    b.Property<int>("Inf611mnpM")
                        .HasColumnName("INF611MNP_M")
                        .HasColumnType("int");

                    b.Property<int>("InfAgeF")
                        .HasColumnName("INF_AGE_F")
                        .HasColumnType("int");

                    b.Property<int>("InfAgeM")
                        .HasColumnName("INF_AGE_M")
                        .HasColumnType("int");

                    b.Property<int>("InfBreastF")
                        .HasColumnName("INF_BREAST_F")
                        .HasColumnType("int");

                    b.Property<int>("InfBreastM")
                        .HasColumnName("INF_BREAST_M")
                        .HasColumnType("int");

                    b.Property<int>("InfFoodF")
                        .HasColumnName("INF_FOOD_F")
                        .HasColumnType("int");

                    b.Property<int>("InfFoodM")
                        .HasColumnName("INF_FOOD_M")
                        .HasColumnType("int");

                    b.Property<int>("InfNewbsF")
                        .HasColumnName("INF_NEWBS_F")
                        .HasColumnType("int");

                    b.Property<int>("InfNewbsM")
                        .HasColumnName("INF_NEWBS_M")
                        .HasColumnType("int");

                    b.Property<int>("InfVita1259F")
                        .HasColumnName("INF_VITA1259_F")
                        .HasColumnType("int");

                    b.Property<int>("InfVita1259M")
                        .HasColumnName("INF_VITA1259_M")
                        .HasColumnType("int");

                    b.Property<int>("InfVita6071F")
                        .HasColumnName("INF_VITA6071_F")
                        .HasColumnType("int");

                    b.Property<int>("InfVita6071M")
                        .HasColumnName("INF_VITA6071_M")
                        .HasColumnType("int");

                    b.Property<int>("InfVita611F")
                        .HasColumnName("INF_VITA611_F")
                        .HasColumnType("int");

                    b.Property<int>("InfVita611M")
                        .HasColumnName("INF_VITA611_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PneugtF")
                        .HasColumnName("PNEUGT_F")
                        .HasColumnType("int");

                    b.Property<int>("PneugtM")
                        .HasColumnName("PNEUGT_M")
                        .HasColumnType("int");

                    b.Property<int>("PneuncF")
                        .HasColumnName("PNEUNC_F")
                        .HasColumnType("int");

                    b.Property<int>("PneuncM")
                        .HasColumnName("PNEUNC_M")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Sick1259F")
                        .HasColumnName("SICK_1259_F")
                        .HasColumnType("int");

                    b.Property<int>("Sick1259M")
                        .HasColumnName("SICK_1259_M")
                        .HasColumnType("int");

                    b.Property<int>("Sick6071F")
                        .HasColumnName("SICK_6071_F")
                        .HasColumnType("int");

                    b.Property<int>("Sick6071M")
                        .HasColumnName("SICK_6071_M")
                        .HasColumnType("int");

                    b.Property<int>("Sick611F")
                        .HasColumnName("SICK_611_F")
                        .HasColumnType("int");

                    b.Property<int>("Sick611M")
                        .HasColumnName("SICK_611_M")
                        .HasColumnType("int");

                    b.Property<int>("Sickvita1259F")
                        .HasColumnName("SICKVITA_1259_F")
                        .HasColumnType("int");

                    b.Property<int>("Sickvita1259M")
                        .HasColumnName("SICKVITA_1259_M")
                        .HasColumnType("int");

                    b.Property<int>("Sickvita6071F")
                        .HasColumnName("SICKVITA_6071_F")
                        .HasColumnType("int");

                    b.Property<int>("Sickvita6071M")
                        .HasColumnName("SICKVITA_6071_M")
                        .HasColumnType("int");

                    b.Property<int>("Sickvita611F")
                        .HasColumnName("SICKVITA_611_F")
                        .HasColumnType("int");

                    b.Property<int>("Sickvita611M")
                        .HasColumnName("SICKVITA_611_M")
                        .HasColumnType("int");

                    b.ToTable("ChildCare");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.CopyOfProvDate1", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BgyDate")
                        .HasColumnName("BGY_DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvDesc")
                        .IsRequired()
                        .HasColumnName("PROV_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegDesc")
                        .IsRequired()
                        .HasColumnName("REG_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Copy Of PROV_DATE1");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.DemographicProfile", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BgyDesc")
                        .IsRequired()
                        .HasColumnName("BGY_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Field1")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Hc")
                        .HasColumnName("HC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("DemographicProfile");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.DentalHealth", b =>
                {
                    b.Property<int>("AyBohcM")
                        .HasColumnName("AY_BOHC_M")
                        .HasColumnType("int");

                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ChildBohcF")
                        .HasColumnName("CHILD_BOHC_F")
                        .HasColumnType("int");

                    b.Property<int>("ChildBohcM")
                        .HasColumnName("CHILD_BOHC_M")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OfcF")
                        .HasColumnName("OFC_F")
                        .HasColumnType("int");

                    b.Property<int>("OfcM")
                        .HasColumnName("OFC_M")
                        .HasColumnType("int");

                    b.Property<int>("OldperBohcF")
                        .HasColumnName("OLDPER_BOHC_F")
                        .HasColumnType("int");

                    b.Property<int>("OldperBohcM")
                        .HasColumnName("OLDPER_BOHC_M")
                        .HasColumnType("int");

                    b.Property<int>("PregBohcF")
                        .HasColumnName("PREG_BOHC_F")
                        .HasColumnType("int");

                    b.Property<int>("PregBohcM")
                        .HasColumnName("PREG_BOHC_M")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("_3AdolescentAndYouth1024YoGivenBohc")
                        .HasColumnName("_3_Adolescent_and_Youth_10_24_yo_given_BOHC")
                        .HasColumnType("int");

                    b.ToTable("DentalHealth");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.EnvironmentalHealth", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("Foodest")
                        .HasColumnName("FOODEST")
                        .HasColumnType("int");

                    b.Property<int>("FoodestSan")
                        .HasColumnName("FOODEST_SAN")
                        .HasColumnType("int");

                    b.Property<int>("Foodhand")
                        .HasColumnName("FOODHAND")
                        .HasColumnType("int");

                    b.Property<int>("FoodhandHc")
                        .HasColumnName("FOODHAND_HC")
                        .HasColumnType("int");

                    b.Property<int>("Hhsanfac")
                        .HasColumnName("HHSANFAC")
                        .HasColumnType("int");

                    b.Property<int>("Hhsantoilet")
                        .HasColumnName("HHSANTOILET")
                        .HasColumnType("int");

                    b.Property<int>("Hhwaste")
                        .HasColumnName("HHWASTE")
                        .HasColumnType("int");

                    b.Property<int>("HhwaterLevel1")
                        .HasColumnName("HHWATER_LEVEL1")
                        .HasColumnType("int");

                    b.Property<int>("HhwaterLevel2")
                        .HasColumnName("HHWATER_LEVEL2")
                        .HasColumnType("int");

                    b.Property<int>("HhwaterLevel3")
                        .HasColumnName("HHWATER_LEVEL3")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("SaltTest")
                        .HasColumnName("SALT_TEST")
                        .HasColumnType("int");

                    b.Property<int>("SaltTestiod")
                        .HasColumnName("SALT_TESTIOD")
                        .HasColumnType("int");

                    b.Property<string>("YearEnv")
                        .IsRequired()
                        .HasColumnName("YEAR_ENV")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("EnvironmentalHealth");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.FacilityProfile", b =>
                {
                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Year")
                        .HasColumnName("YEAR")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("FacilityProfile");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.FamilyPlanning", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PrevCondom")
                        .HasColumnName("PREV_CONDOM")
                        .HasColumnType("int");

                    b.Property<int>("PrevCondomF")
                        .HasColumnName("PREV_CONDOM_F")
                        .HasColumnType("int");

                    b.Property<int>("PrevDmpa")
                        .HasColumnName("PREV_DMPA")
                        .HasColumnType("int");

                    b.Property<int>("PrevFs")
                        .HasColumnName("PREV_FS")
                        .HasColumnType("int");

                    b.Property<int>("PrevImplant")
                        .HasColumnName("PREV_IMPLANT")
                        .HasColumnType("int");

                    b.Property<int>("PrevIud")
                        .HasColumnName("PREV_IUD")
                        .HasColumnType("int");

                    b.Property<int>("PrevMs")
                        .HasColumnName("PREV_MS")
                        .HasColumnType("int");

                    b.Property<int>("PrevNfpbbt")
                        .HasColumnName("PREV_NFPBBT")
                        .HasColumnType("int");

                    b.Property<int>("PrevNfpcm")
                        .HasColumnName("PREV_NFPCM")
                        .HasColumnType("int");

                    b.Property<int>("PrevNfplam")
                        .HasColumnName("PREV_NFPLAM")
                        .HasColumnType("int");

                    b.Property<int>("PrevNfpsdm")
                        .HasColumnName("PREV_NFPSDM")
                        .HasColumnType("int");

                    b.Property<int>("PrevNfpstm")
                        .HasColumnName("PREV_NFPSTM")
                        .HasColumnType("int");

                    b.Property<int>("PrevPills")
                        .HasColumnName("PREV_PILLS")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TcuCondom")
                        .HasColumnName("TCU_CONDOM")
                        .HasColumnType("int");

                    b.Property<int>("TcuCondomF")
                        .HasColumnName("TCU_CONDOM_F")
                        .HasColumnType("int");

                    b.Property<int>("TcuDmpa")
                        .HasColumnName("TCU_DMPA")
                        .HasColumnType("int");

                    b.Property<int>("TcuFs")
                        .HasColumnName("TCU_FS")
                        .HasColumnType("int");

                    b.Property<int>("TcuImplant")
                        .HasColumnName("TCU_IMPLANT")
                        .HasColumnType("int");

                    b.Property<int>("TcuIud")
                        .HasColumnName("TCU_IUD")
                        .HasColumnType("int");

                    b.Property<int>("TcuMs")
                        .HasColumnName("TCU_MS")
                        .HasColumnType("int");

                    b.Property<int>("TcuNfpbbt")
                        .HasColumnName("TCU_NFPBBT")
                        .HasColumnType("int");

                    b.Property<int>("TcuNfpcm")
                        .HasColumnName("TCU_NFPCM")
                        .HasColumnType("int");

                    b.Property<int>("TcuNfplam")
                        .HasColumnName("TCU_NFPLAM")
                        .HasColumnType("int");

                    b.Property<int>("TcuNfpsdm")
                        .HasColumnName("TCU_NFPSDM")
                        .HasColumnType("int");

                    b.Property<int>("TcuNfpstm")
                        .HasColumnName("TCU_NFPSTM")
                        .HasColumnType("int");

                    b.Property<int>("TcuPills")
                        .HasColumnName("TCU_PILLS")
                        .HasColumnType("int");

                    b.Property<int>("TdoCondom")
                        .HasColumnName("TDO_CONDOM")
                        .HasColumnType("int");

                    b.Property<int>("TdoCondomF")
                        .HasColumnName("TDO_CONDOM_F")
                        .HasColumnType("int");

                    b.Property<int>("TdoDmpa")
                        .HasColumnName("TDO_DMPA")
                        .HasColumnType("int");

                    b.Property<int>("TdoFs")
                        .HasColumnName("TDO_FS")
                        .HasColumnType("int");

                    b.Property<int>("TdoImplant")
                        .HasColumnName("TDO_IMPLANT")
                        .HasColumnType("int");

                    b.Property<int>("TdoIud")
                        .HasColumnName("TDO_IUD")
                        .HasColumnType("int");

                    b.Property<int>("TdoMs")
                        .HasColumnName("TDO_MS")
                        .HasColumnType("int");

                    b.Property<int>("TdoNfpbbt")
                        .HasColumnName("TDO_NFPBBT")
                        .HasColumnType("int");

                    b.Property<int>("TdoNfpcm")
                        .HasColumnName("TDO_NFPCM")
                        .HasColumnType("int");

                    b.Property<int>("TdoNfplam")
                        .HasColumnName("TDO_NFPLAM")
                        .HasColumnType("int");

                    b.Property<int>("TdoNfpsdm")
                        .HasColumnName("TDO_NFPSDM")
                        .HasColumnType("int");

                    b.Property<int>("TdoNfpstm")
                        .HasColumnName("TDO_NFPSTM")
                        .HasColumnType("int");

                    b.Property<int>("TdoPills")
                        .HasColumnName("TDO_PILLS")
                        .HasColumnType("int");

                    b.Property<int>("TempCondom")
                        .HasColumnName("TEMP_CONDOM")
                        .HasColumnType("int");

                    b.Property<int>("TempCondomF")
                        .HasColumnName("TEMP_CONDOM_F")
                        .HasColumnType("int");

                    b.Property<int>("TempDmpa")
                        .HasColumnName("TEMP_DMPA")
                        .HasColumnType("int");

                    b.Property<int>("TempFs")
                        .HasColumnName("TEMP_FS")
                        .HasColumnType("int");

                    b.Property<int>("TempImplant")
                        .HasColumnName("TEMP_IMPLANT")
                        .HasColumnType("int");

                    b.Property<int>("TempIud")
                        .HasColumnName("TEMP_IUD")
                        .HasColumnType("int");

                    b.Property<int>("TempMs")
                        .HasColumnName("TEMP_MS")
                        .HasColumnType("int");

                    b.Property<int>("TempNfpbbt")
                        .HasColumnName("TEMP_NFPBBT")
                        .HasColumnType("int");

                    b.Property<int>("TempNfpcm")
                        .HasColumnName("TEMP_NFPCM")
                        .HasColumnType("int");

                    b.Property<int>("TempNfplam")
                        .HasColumnName("TEMP_NFPLAM")
                        .HasColumnType("int");

                    b.Property<int>("TempNfpsdm")
                        .HasColumnName("TEMP_NFPSDM")
                        .HasColumnType("int");

                    b.Property<int>("TempNfpstm")
                        .HasColumnName("TEMP_NFPSTM")
                        .HasColumnType("int");

                    b.Property<int>("TempPills")
                        .HasColumnName("TEMP_PILLS")
                        .HasColumnType("int");

                    b.Property<int>("TnaCondom")
                        .HasColumnName("TNA_CONDOM")
                        .HasColumnType("int");

                    b.Property<int>("TnaCondomF")
                        .HasColumnName("TNA_CONDOM_F")
                        .HasColumnType("int");

                    b.Property<int>("TnaDmpa")
                        .HasColumnName("TNA_DMPA")
                        .HasColumnType("int");

                    b.Property<int>("TnaFs")
                        .HasColumnName("TNA_FS")
                        .HasColumnType("int");

                    b.Property<int>("TnaImplant")
                        .HasColumnName("TNA_IMPLANT")
                        .HasColumnType("int");

                    b.Property<int>("TnaIud")
                        .HasColumnName("TNA_IUD")
                        .HasColumnType("int");

                    b.Property<int>("TnaMs")
                        .HasColumnName("TNA_MS")
                        .HasColumnType("int");

                    b.Property<int>("TnaNfpbbt")
                        .HasColumnName("TNA_NFPBBT")
                        .HasColumnType("int");

                    b.Property<int>("TnaNfpcm")
                        .HasColumnName("TNA_NFPCM")
                        .HasColumnType("int");

                    b.Property<int>("TnaNfplam")
                        .HasColumnName("TNA_NFPLAM")
                        .HasColumnType("int");

                    b.Property<int>("TnaNfpsdm")
                        .HasColumnName("TNA_NFPSDM")
                        .HasColumnType("int");

                    b.Property<int>("TnaNfpstm")
                        .HasColumnName("TNA_NFPSTM")
                        .HasColumnType("int");

                    b.Property<int>("TnaPills")
                        .HasColumnName("TNA_PILLS")
                        .HasColumnType("int");

                    b.Property<int>("ToaCondom")
                        .HasColumnName("TOA_CONDOM")
                        .HasColumnType("int");

                    b.Property<int>("ToaCondomF")
                        .HasColumnName("TOA_CONDOM_F")
                        .HasColumnType("int");

                    b.Property<int>("ToaDmpa")
                        .HasColumnName("TOA_DMPA")
                        .HasColumnType("int");

                    b.Property<int>("ToaFs")
                        .HasColumnName("TOA_FS")
                        .HasColumnType("int");

                    b.Property<int>("ToaImplant")
                        .HasColumnName("TOA_IMPLANT")
                        .HasColumnType("int");

                    b.Property<int>("ToaIud")
                        .HasColumnName("TOA_IUD")
                        .HasColumnType("int");

                    b.Property<int>("ToaMs")
                        .HasColumnName("TOA_MS")
                        .HasColumnType("int");

                    b.Property<int>("ToaNfpbbt")
                        .HasColumnName("TOA_NFPBBT")
                        .HasColumnType("int");

                    b.Property<int>("ToaNfpcm")
                        .HasColumnName("TOA_NFPCM")
                        .HasColumnType("int");

                    b.Property<int>("ToaNfplam")
                        .HasColumnName("TOA_NFPLAM")
                        .HasColumnType("int");

                    b.Property<int>("ToaNfpsdm")
                        .HasColumnName("TOA_NFPSDM")
                        .HasColumnType("int");

                    b.Property<int>("ToaNfpstm")
                        .HasColumnName("TOA_NFPSTM")
                        .HasColumnType("int");

                    b.Property<int>("ToaPills")
                        .HasColumnName("TOA_PILLS")
                        .HasColumnType("int");

                    b.ToTable("FamilyPlanning");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Fhud1", b =>
                {
                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("MunDesc")
                        .IsRequired()
                        .HasColumnName("MUN_DESC")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .IsRequired()
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.ToTable("FHUD1");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Fhud2", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BgyDesc")
                        .HasColumnName("BGY_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .IsRequired()
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("FHUD2");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Fhud5", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BgyDesc")
                        .HasColumnName("BGY_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .IsRequired()
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("FHUD5");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Filariasis", b =>
                {
                    b.Property<int>("AdenocaseF")
                        .HasColumnName("ADENOCASE_F")
                        .HasColumnType("int");

                    b.Property<int>("AdenocaseM")
                        .HasColumnName("ADENOCASE_M")
                        .HasColumnType("int");

                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CaseexamF")
                        .HasColumnName("CASEEXAM_F")
                        .HasColumnType("int");

                    b.Property<int>("CaseexamM")
                        .HasColumnName("CASEEXAM_M")
                        .HasColumnType("int");

                    b.Property<int>("CaseposF")
                        .HasColumnName("CASEPOS_F")
                        .HasColumnType("int");

                    b.Property<int>("CaseposM")
                        .HasColumnName("CASEPOS_M")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("MdaF")
                        .HasColumnName("MDA_F")
                        .HasColumnType("int");

                    b.Property<int>("MdaM")
                        .HasColumnName("MDA_M")
                        .HasColumnType("int");

                    b.Property<int>("MfF")
                        .HasColumnName("MF_F")
                        .HasColumnType("int");

                    b.Property<int>("MfM")
                        .HasColumnName("MF_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("NocaseF")
                        .HasColumnName("NOCASE_F")
                        .HasColumnType("int");

                    b.Property<int>("NocaseM")
                        .HasColumnName("NOCASE_M")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Filariasis");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Icd10code", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("text");

                    b.ToTable("ICD10Code");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Leprocy", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CasecuredF")
                        .HasColumnName("CASECURED_F")
                        .HasColumnType("int");

                    b.Property<int>("CasecuredM")
                        .HasColumnName("CASECURED_M")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("Lepcase15F")
                        .HasColumnName("LEPCASE15_F")
                        .HasColumnType("int");

                    b.Property<int>("Lepcase15M")
                        .HasColumnName("LEPCASE15_M")
                        .HasColumnType("int");

                    b.Property<int>("LepcaseF")
                        .HasColumnName("LEPCASE_F")
                        .HasColumnType("int");

                    b.Property<int>("LepcaseM")
                        .HasColumnName("LEPCASE_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Newdet2F")
                        .HasColumnName("NEWDET2_F")
                        .HasColumnType("int");

                    b.Property<int>("Newdet2M")
                        .HasColumnName("NEWDET2_M")
                        .HasColumnType("int");

                    b.Property<int>("NewdetF")
                        .HasColumnName("NEWDET_F")
                        .HasColumnType("int");

                    b.Property<int>("NewdetM")
                        .HasColumnName("NEWDET_M")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Leprocy");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.M2Bhs", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Disease")
                        .HasColumnName("DISEASE")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Under1F")
                        .HasColumnName("UNDER1_F")
                        .HasColumnType("int");

                    b.Property<int>("Under1M")
                        .HasColumnName("UNDER1_M")
                        .HasColumnType("int");

                    b.Property<int>("_1014F")
                        .HasColumnName("10_14_F")
                        .HasColumnType("int");

                    b.Property<int>("_1014M")
                        .HasColumnName("10_14_M")
                        .HasColumnType("int");

                    b.Property<int>("_14F")
                        .HasColumnName("1_4_F")
                        .HasColumnType("int");

                    b.Property<int>("_14M")
                        .HasColumnName("1_4_M")
                        .HasColumnType("int");

                    b.Property<int>("_1519F")
                        .HasColumnName("15_19_F")
                        .HasColumnType("int");

                    b.Property<int>("_1519M")
                        .HasColumnName("15_19_M")
                        .HasColumnType("int");

                    b.Property<int>("_2024F")
                        .HasColumnName("20_24_F")
                        .HasColumnType("int");

                    b.Property<int>("_2024M")
                        .HasColumnName("20_24_M")
                        .HasColumnType("int");

                    b.Property<int>("_2529F")
                        .HasColumnName("25_29_F")
                        .HasColumnType("int");

                    b.Property<int>("_2529M")
                        .HasColumnName("25_29_M")
                        .HasColumnType("int");

                    b.Property<int>("_3034F")
                        .HasColumnName("30_34_F")
                        .HasColumnType("int");

                    b.Property<int>("_3034M")
                        .HasColumnName("30_34_M")
                        .HasColumnType("int");

                    b.Property<int>("_3539F")
                        .HasColumnName("35_39_F")
                        .HasColumnType("int");

                    b.Property<int>("_3539M")
                        .HasColumnName("35_39_M")
                        .HasColumnType("int");

                    b.Property<int>("_4044F")
                        .HasColumnName("40_44_F")
                        .HasColumnType("int");

                    b.Property<int>("_4044M")
                        .HasColumnName("40_44_M")
                        .HasColumnType("int");

                    b.Property<int>("_4549F")
                        .HasColumnName("45_49_F")
                        .HasColumnType("int");

                    b.Property<int>("_4549M")
                        .HasColumnName("45_49_M")
                        .HasColumnType("int");

                    b.Property<int>("_5054F")
                        .HasColumnName("50_54_F")
                        .HasColumnType("int");

                    b.Property<int>("_5054M")
                        .HasColumnName("50_54_M")
                        .HasColumnType("int");

                    b.Property<int>("_5559F")
                        .HasColumnName("55_59_F")
                        .HasColumnType("int");

                    b.Property<int>("_5559M")
                        .HasColumnName("55_59_M")
                        .HasColumnType("int");

                    b.Property<int>("_59F")
                        .HasColumnName("5_9_F")
                        .HasColumnType("int");

                    b.Property<int>("_59M")
                        .HasColumnName("5_9_M")
                        .HasColumnType("int");

                    b.Property<int>("_6064F")
                        .HasColumnName("60_64_F")
                        .HasColumnType("int");

                    b.Property<int>("_6064M")
                        .HasColumnName("60_64_M")
                        .HasColumnType("int");

                    b.Property<int>("_6569F")
                        .HasColumnName("65_69_F")
                        .HasColumnType("int");

                    b.Property<int>("_6569M")
                        .HasColumnName("65_69_M")
                        .HasColumnType("int");

                    b.Property<int>("_65aboveF")
                        .HasColumnName("65ABOVE_F")
                        .HasColumnType("int");

                    b.Property<int>("_65aboveM")
                        .HasColumnName("65ABOVE_M")
                        .HasColumnType("int");

                    b.Property<int>("_70aboveF")
                        .HasColumnName("70ABOVE_F")
                        .HasColumnType("int");

                    b.Property<int>("_70aboveM")
                        .HasColumnName("70ABOVE_M")
                        .HasColumnType("int");

                    b.ToTable("M2_BHS");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Malaria", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ConfmalPfacF")
                        .HasColumnName("CONFMAL_PFAC_F")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPfacM")
                        .HasColumnName("CONFMAL_PFAC_M")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPfacP")
                        .HasColumnName("CONFMAL_PFAC_P")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPmalF")
                        .HasColumnName("CONFMAL_PMAL_F")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPmalM")
                        .HasColumnName("CONFMAL_PMAL_M")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPmalP")
                        .HasColumnName("CONFMAL_PMAL_P")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPovaF")
                        .HasColumnName("CONFMAL_POVA_F")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPovaM")
                        .HasColumnName("CONFMAL_POVA_M")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPovaP")
                        .HasColumnName("CONFMAL_POVA_P")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPvivF")
                        .HasColumnName("CONFMAL_PVIV_F")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPvivM")
                        .HasColumnName("CONFMAL_PVIV_M")
                        .HasColumnType("int");

                    b.Property<int>("ConfmalPvivP")
                        .HasColumnName("CONFMAL_PVIV_P")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("HhAtrisk")
                        .HasColumnName("HH_ATRISK")
                        .HasColumnType("int");

                    b.Property<int>("HhItn")
                        .HasColumnName("HH_ITN")
                        .HasColumnType("int");

                    b.Property<int>("MalcaseP")
                        .HasColumnName("MALCASE_P")
                        .HasColumnType("int");

                    b.Property<int>("Malcaseless5F")
                        .HasColumnName("MALCASELESS5_F")
                        .HasColumnType("int");

                    b.Property<int>("Malcaseless5M")
                        .HasColumnName("MALCASELESS5_M")
                        .HasColumnType("int");

                    b.Property<int>("Malcasemore5F")
                        .HasColumnName("MALCASEMORE5_F")
                        .HasColumnType("int");

                    b.Property<int>("Malcasemore5M")
                        .HasColumnName("MALCASEMORE5_M")
                        .HasColumnType("int");

                    b.Property<int>("MaldeathF")
                        .HasColumnName("MALDEATH_F")
                        .HasColumnType("int");

                    b.Property<int>("MaldeathM")
                        .HasColumnName("MALDEATH_M")
                        .HasColumnType("int");

                    b.Property<int>("MethrdtF")
                        .HasColumnName("METHRDT_F")
                        .HasColumnType("int");

                    b.Property<int>("MethrdtM")
                        .HasColumnName("METHRDT_M")
                        .HasColumnType("int");

                    b.Property<int>("MethslideF")
                        .HasColumnName("METHSLIDE_F")
                        .HasColumnType("int");

                    b.Property<int>("MethslideM")
                        .HasColumnName("METHSLIDE_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PopLlin")
                        .HasColumnName("POP_LLIN")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Malaria");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.MaternalCare", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Pc1")
                        .HasColumnName("PC1")
                        .HasColumnType("int");

                    b.Property<int>("Pc2")
                        .HasColumnName("PC2")
                        .HasColumnType("int");

                    b.Property<int>("Pc3")
                        .HasColumnName("PC3")
                        .HasColumnType("int");

                    b.Property<int>("Pc4")
                        .HasColumnName("PC4")
                        .HasColumnType("int");

                    b.Property<int>("Pc5")
                        .HasColumnName("PC5")
                        .HasColumnType("int");

                    b.Property<int>("Pp1")
                        .HasColumnName("PP1")
                        .HasColumnType("int");

                    b.Property<int>("Pp2")
                        .HasColumnName("PP2")
                        .HasColumnType("int");

                    b.Property<int>("Pp3")
                        .HasColumnName("PP3")
                        .HasColumnType("int");

                    b.Property<int>("Pp4")
                        .HasColumnName("PP4")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .IsRequired()
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("W1049Fe")
                        .HasColumnName("W1049_FE")
                        .HasColumnType("int");

                    b.ToTable("MaternalCare");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Month", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Month1")
                        .IsRequired()
                        .HasColumnName("MONTH")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Month");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.MortBhs", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Disease")
                        .HasColumnName("DISEASE")
                        .HasColumnType("text");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Under1F")
                        .HasColumnName("UNDER1_F")
                        .HasColumnType("int");

                    b.Property<int>("Under1M")
                        .HasColumnName("UNDER1_M")
                        .HasColumnType("int");

                    b.Property<int>("_1014F")
                        .HasColumnName("10_14_F")
                        .HasColumnType("int");

                    b.Property<int>("_1014M")
                        .HasColumnName("10_14_M")
                        .HasColumnType("int");

                    b.Property<int>("_14F")
                        .HasColumnName("1_4_F")
                        .HasColumnType("int");

                    b.Property<int>("_14M")
                        .HasColumnName("1_4_M")
                        .HasColumnType("int");

                    b.Property<int>("_1519F")
                        .HasColumnName("15_19_F")
                        .HasColumnType("int");

                    b.Property<int>("_1519M")
                        .HasColumnName("15_19_M")
                        .HasColumnType("int");

                    b.Property<int>("_2024F")
                        .HasColumnName("20_24_F")
                        .HasColumnType("int");

                    b.Property<int>("_2024M")
                        .HasColumnName("20_24_M")
                        .HasColumnType("int");

                    b.Property<int>("_2529F")
                        .HasColumnName("25_29_F")
                        .HasColumnType("int");

                    b.Property<int>("_2529M")
                        .HasColumnName("25_29_M")
                        .HasColumnType("int");

                    b.Property<int>("_3034F")
                        .HasColumnName("30_34_F")
                        .HasColumnType("int");

                    b.Property<int>("_3034M")
                        .HasColumnName("30_34_M")
                        .HasColumnType("int");

                    b.Property<int>("_3539F")
                        .HasColumnName("35_39_F")
                        .HasColumnType("int");

                    b.Property<int>("_3539M")
                        .HasColumnName("35_39_M")
                        .HasColumnType("int");

                    b.Property<int>("_4044F")
                        .HasColumnName("40_44_F")
                        .HasColumnType("int");

                    b.Property<int>("_4044M")
                        .HasColumnName("40_44_M")
                        .HasColumnType("int");

                    b.Property<int>("_4549F")
                        .HasColumnName("45_49_F")
                        .HasColumnType("int");

                    b.Property<int>("_4549M")
                        .HasColumnName("45_49_M")
                        .HasColumnType("int");

                    b.Property<int>("_5054F")
                        .HasColumnName("50_54_F")
                        .HasColumnType("int");

                    b.Property<int>("_5054M")
                        .HasColumnName("50_54_M")
                        .HasColumnType("int");

                    b.Property<int>("_5559F")
                        .HasColumnName("55_59_F")
                        .HasColumnType("int");

                    b.Property<int>("_5559M")
                        .HasColumnName("55_59_M")
                        .HasColumnType("int");

                    b.Property<int>("_59F")
                        .HasColumnName("5_9_F")
                        .HasColumnType("int");

                    b.Property<int>("_59M")
                        .HasColumnName("5_9_M")
                        .HasColumnType("int");

                    b.Property<int>("_6064F")
                        .HasColumnName("60_64_F")
                        .HasColumnType("int");

                    b.Property<int>("_6064M")
                        .HasColumnName("60_64_M")
                        .HasColumnType("int");

                    b.Property<int>("_6569F")
                        .HasColumnName("65_69_F")
                        .HasColumnType("int");

                    b.Property<int>("_6569M")
                        .HasColumnName("65_69_M")
                        .HasColumnType("int");

                    b.Property<int>("_65aboveF")
                        .HasColumnName("65ABOVE_F")
                        .HasColumnType("int");

                    b.Property<int>("_65aboveM")
                        .HasColumnName("65ABOVE_M")
                        .HasColumnType("int");

                    b.Property<int>("_70aboveF")
                        .HasColumnName("70ABOVE_F")
                        .HasColumnType("int");

                    b.Property<int>("_70aboveM")
                        .HasColumnName("70ABOVE_M")
                        .HasColumnType("int");

                    b.ToTable("MORT_BHS");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Mortality", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("Deathund5F")
                        .HasColumnName("DEATHUND5_F")
                        .HasColumnType("int");

                    b.Property<int>("Deathund5M")
                        .HasColumnName("DEATHUND5_M")
                        .HasColumnType("int");

                    b.Property<int>("FdF")
                        .HasColumnName("FD_F")
                        .HasColumnType("int");

                    b.Property<int>("FdM")
                        .HasColumnName("FD_M")
                        .HasColumnType("int");

                    b.Property<int>("InfdeathF")
                        .HasColumnName("INFDEATH_F")
                        .HasColumnType("int");

                    b.Property<int>("InfdeathM")
                        .HasColumnName("INFDEATH_M")
                        .HasColumnType("int");

                    b.Property<int>("MatdeathF")
                        .HasColumnName("MATDEATH_F")
                        .HasColumnType("int");

                    b.Property<int>("MatdeathM")
                        .HasColumnName("MATDEATH_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("NeonF")
                        .HasColumnName("NEON_F")
                        .HasColumnType("int");

                    b.Property<int>("NeonM")
                        .HasColumnName("NEON_M")
                        .HasColumnType("int");

                    b.Property<int>("NeotetF")
                        .HasColumnName("NEOTET_F")
                        .HasColumnType("int");

                    b.Property<int>("NeotetM")
                        .HasColumnName("NEOTET_M")
                        .HasColumnType("int");

                    b.Property<int>("PrenatdeathF")
                        .HasColumnName("PRENATDEATH_F")
                        .HasColumnType("int");

                    b.Property<int>("PrenatdeathM")
                        .HasColumnName("PRENATDEATH_M")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TotdeathF")
                        .HasColumnName("TOTDEATH_F")
                        .HasColumnType("int");

                    b.Property<int>("TotdeathM")
                        .HasColumnName("TOTDEATH_M")
                        .HasColumnType("int");

                    b.ToTable("Mortality");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.MunPopulation", b =>
                {
                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PopMun")
                        .HasColumnName("POP_MUN")
                        .HasColumnType("int");

                    b.Property<string>("PopYear")
                        .IsRequired()
                        .HasColumnName("POP_YEAR")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Mun_Population");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Muncity", b =>
                {
                    b.Property<string>("Cat")
                        .IsRequired()
                        .HasColumnName("CAT")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Ilhz")
                        .HasColumnName("ILHZ")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MunDesc")
                        .IsRequired()
                        .HasColumnName("MUN_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .IsRequired()
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Muncity");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.NameAutoCorrectSaveFailures", b =>
                {
                    b.Property<string>("FailureReason")
                        .HasColumnName("Failure Reason")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ObjectName")
                        .HasColumnName("Object Name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ObjectType")
                        .HasColumnName("Object Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime");

                    b.ToTable("Name AutoCorrect Save Failures");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Natality", b =>
                {
                    b.Property<int>("AbrtotF")
                        .HasColumnName("ABRTOT_F")
                        .HasColumnType("int");

                    b.Property<int>("AbrtotM")
                        .HasColumnName("ABRTOT_M")
                        .HasColumnType("int");

                    b.Property<int>("AttdocF")
                        .HasColumnName("ATTDOC_F")
                        .HasColumnType("int");

                    b.Property<int>("AttdocM")
                        .HasColumnName("ATTDOC_M")
                        .HasColumnType("int");

                    b.Property<int>("AttmidwF")
                        .HasColumnName("ATTMIDW_F")
                        .HasColumnType("int");

                    b.Property<int>("AttmidwM")
                        .HasColumnName("ATTMIDW_M")
                        .HasColumnType("int");

                    b.Property<int>("AttnurseF")
                        .HasColumnName("ATTNURSE_F")
                        .HasColumnType("int");

                    b.Property<int>("AttnurseM")
                        .HasColumnName("ATTNURSE_M")
                        .HasColumnType("int");

                    b.Property<int>("AttotherF")
                        .HasColumnName("ATTOTHER_F")
                        .HasColumnType("int");

                    b.Property<int>("AttotherM")
                        .HasColumnName("ATTOTHER_M")
                        .HasColumnType("int");

                    b.Property<int>("AttthF")
                        .HasColumnName("ATTTH_F")
                        .HasColumnType("int");

                    b.Property<int>("AttthM")
                        .HasColumnName("ATTTH_M")
                        .HasColumnType("int");

                    b.Property<int>("AttunkF")
                        .HasColumnName("ATTUNK_F")
                        .HasColumnType("int");

                    b.Property<int>("AttunkM")
                        .HasColumnName("ATTUNK_M")
                        .HasColumnType("int");

                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Bw2500lessF")
                        .HasColumnName("BW2500LESS_F")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500lessM")
                        .HasColumnName("BW2500LESS_M")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500upF")
                        .HasColumnName("BW2500UP_F")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500upM")
                        .HasColumnName("BW2500UP_M")
                        .HasColumnType("int");

                    b.Property<int>("BwnkF")
                        .HasColumnName("BWNK_F")
                        .HasColumnType("int");

                    b.Property<int>("BwnkM")
                        .HasColumnName("BWNK_M")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("FdtotF")
                        .HasColumnName("FDTOT_F")
                        .HasColumnType("int");

                    b.Property<int>("FdtotM")
                        .HasColumnName("FDTOT_M")
                        .HasColumnType("int");

                    b.Property<int>("LbtotF")
                        .HasColumnName("LBTOT_F")
                        .HasColumnType("int");

                    b.Property<int>("LbtotM")
                        .HasColumnName("LBTOT_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("NopregF")
                        .HasColumnName("NOPREG_F")
                        .HasColumnType("int");

                    b.Property<int>("NopregM")
                        .HasColumnName("NOPREG_M")
                        .HasColumnType("int");

                    b.Property<int>("NormdelHomeF")
                        .HasColumnName("NORMDEL_HOME_F")
                        .HasColumnType("int");

                    b.Property<int>("NormdelHomeM")
                        .HasColumnName("NORMDEL_HOME_M")
                        .HasColumnType("int");

                    b.Property<int>("NormdelHospF")
                        .HasColumnName("NORMDEL_HOSP_F")
                        .HasColumnType("int");

                    b.Property<int>("NormdelHospM")
                        .HasColumnName("NORMDEL_HOSP_M")
                        .HasColumnType("int");

                    b.Property<int>("NormdelOthF")
                        .HasColumnName("NORMDEL_OTH_F")
                        .HasColumnType("int");

                    b.Property<int>("NormdelOthM")
                        .HasColumnName("NORMDEL_OTH_M")
                        .HasColumnType("int");

                    b.Property<int>("NsdF")
                        .HasColumnName("NSD_F")
                        .HasColumnType("int");

                    b.Property<int>("NsdM")
                        .HasColumnName("NSD_M")
                        .HasColumnType("int");

                    b.Property<int>("OtdF")
                        .HasColumnName("OTD_F")
                        .HasColumnType("int");

                    b.Property<int>("OtdHomeF")
                        .HasColumnName("OTD_HOME_F")
                        .HasColumnType("int");

                    b.Property<int>("OtdHomeM")
                        .HasColumnName("OTD_HOME_M")
                        .HasColumnType("int");

                    b.Property<int>("OtdHospF")
                        .HasColumnName("OTD_HOSP_F")
                        .HasColumnType("int");

                    b.Property<int>("OtdHospM")
                        .HasColumnName("OTD_HOSP_M")
                        .HasColumnType("int");

                    b.Property<int>("OtdM")
                        .HasColumnName("OTD_M")
                        .HasColumnType("int");

                    b.Property<int>("OtdOtherF")
                        .HasColumnName("OTD_OTHER_F")
                        .HasColumnType("int");

                    b.Property<int>("OtdOtherM")
                        .HasColumnName("OTD_OTHER_M")
                        .HasColumnType("int");

                    b.Property<int>("OutAbr")
                        .HasColumnName("OUT_ABR")
                        .HasColumnType("int");

                    b.Property<int>("OutFd")
                        .HasColumnName("OUT_FD")
                        .HasColumnType("int");

                    b.Property<int>("OutLb")
                        .HasColumnName("OUT_LB")
                        .HasColumnType("int");

                    b.Property<int>("PregTot")
                        .HasColumnName("PREG_TOT")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TypepregNkF")
                        .HasColumnName("TYPEPREG_NK_F")
                        .HasColumnType("int");

                    b.Property<int>("TypepregNkM")
                        .HasColumnName("TYPEPREG_NK_M")
                        .HasColumnType("int");

                    b.Property<int>("TypepregNormF")
                        .HasColumnName("TYPEPREG_NORM_F")
                        .HasColumnType("int");

                    b.Property<int>("TypepregNormM")
                        .HasColumnName("TYPEPREG_NORM_M")
                        .HasColumnType("int");

                    b.Property<int>("TypepregRiskF")
                        .HasColumnName("TYPEPREG_RISK_F")
                        .HasColumnType("int");

                    b.Property<int>("TypepregRiskM")
                        .HasColumnName("TYPEPREG_RISK_M")
                        .HasColumnType("int");

                    b.ToTable("Natality");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.NatalityLcr", b =>
                {
                    b.Property<int>("AttdocF")
                        .HasColumnName("ATTDOC_F")
                        .HasColumnType("int");

                    b.Property<int>("AttdocM")
                        .HasColumnName("ATTDOC_M")
                        .HasColumnType("int");

                    b.Property<int>("AttmidwF")
                        .HasColumnName("ATTMIDW_F")
                        .HasColumnType("int");

                    b.Property<int>("AttmidwM")
                        .HasColumnName("ATTMIDW_M")
                        .HasColumnType("int");

                    b.Property<int>("AttnurseF")
                        .HasColumnName("ATTNURSE_F")
                        .HasColumnType("int");

                    b.Property<int>("AttnurseM")
                        .HasColumnName("ATTNURSE_M")
                        .HasColumnType("int");

                    b.Property<int>("AttotherF")
                        .HasColumnName("ATTOTHER_F")
                        .HasColumnType("int");

                    b.Property<int>("AttotherM")
                        .HasColumnName("ATTOTHER_M")
                        .HasColumnType("int");

                    b.Property<int>("AttthF")
                        .HasColumnName("ATTTH_F")
                        .HasColumnType("int");

                    b.Property<int>("AttthM")
                        .HasColumnName("ATTTH_M")
                        .HasColumnType("int");

                    b.Property<int>("AttunkF")
                        .HasColumnName("ATTUNK_F")
                        .HasColumnType("int");

                    b.Property<int>("AttunkM")
                        .HasColumnName("ATTUNK_M")
                        .HasColumnType("int");

                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Bw2500lessF")
                        .HasColumnName("BW2500LESS_F")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500lessM")
                        .HasColumnName("BW2500LESS_M")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500upF")
                        .HasColumnName("BW2500UP_F")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500upM")
                        .HasColumnName("BW2500UP_M")
                        .HasColumnType("int");

                    b.Property<int>("BwnkF")
                        .HasColumnName("BWNK_F")
                        .HasColumnType("int");

                    b.Property<int>("BwnkM")
                        .HasColumnName("BWNK_M")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("LblcrF")
                        .HasColumnName("LBLCR_F")
                        .HasColumnType("int");

                    b.Property<int>("LblcrM")
                        .HasColumnName("LBLCR_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("NdelhfBhsf")
                        .HasColumnName("NDELHF_BHSF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfBhsm")
                        .HasColumnName("NDELHF_BHSM")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfHospf")
                        .HasColumnName("NDELHF_HOSPF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfHospm")
                        .HasColumnName("NDELHF_HOSPM")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfLyf")
                        .HasColumnName("NDELHF_LYF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfLym")
                        .HasColumnName("NDELHF_LYM")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfRhuf")
                        .HasColumnName("NDELHF_RHUF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfRhum")
                        .HasColumnName("NDELHF_RHUM")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidHmf")
                        .HasColumnName("NDELNID_HMF")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidHmm")
                        .HasColumnName("NDELNID_HMM")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidOtf")
                        .HasColumnName("NDELNID_OTF")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidOtm")
                        .HasColumnName("NDELNID_OTM")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfHospf")
                        .HasColumnName("ODELHF_HOSPF")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfHospm")
                        .HasColumnName("ODELHF_HOSPM")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfOtf")
                        .HasColumnName("ODELHF_OTF")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfOtm")
                        .HasColumnName("ODELHF_OTM")
                        .HasColumnType("int");

                    b.Property<int>("PoutAbf")
                        .HasColumnName("POUT_ABF")
                        .HasColumnType("int");

                    b.Property<int>("PoutAbm")
                        .HasColumnName("POUT_ABM")
                        .HasColumnType("int");

                    b.Property<int>("PoutFdf")
                        .HasColumnName("POUT_FDF")
                        .HasColumnType("int");

                    b.Property<int>("PoutFdm")
                        .HasColumnName("POUT_FDM")
                        .HasColumnType("int");

                    b.Property<int>("PoutLbf")
                        .HasColumnName("POUT_LBF")
                        .HasColumnType("int");

                    b.Property<int>("PoutLbm")
                        .HasColumnName("POUT_LBM")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("NatalityLCR");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.NatalityTcl", b =>
                {
                    b.Property<int>("AttdocF")
                        .HasColumnName("ATTDOC_F")
                        .HasColumnType("int");

                    b.Property<int>("AttdocM")
                        .HasColumnName("ATTDOC_M")
                        .HasColumnType("int");

                    b.Property<int>("AttmidwF")
                        .HasColumnName("ATTMIDW_F")
                        .HasColumnType("int");

                    b.Property<int>("AttmidwM")
                        .HasColumnName("ATTMIDW_M")
                        .HasColumnType("int");

                    b.Property<int>("AttnurseF")
                        .HasColumnName("ATTNURSE_F")
                        .HasColumnType("int");

                    b.Property<int>("AttnurseM")
                        .HasColumnName("ATTNURSE_M")
                        .HasColumnType("int");

                    b.Property<int>("AttotherF")
                        .HasColumnName("ATTOTHER_F")
                        .HasColumnType("int");

                    b.Property<int>("AttotherM")
                        .HasColumnName("ATTOTHER_M")
                        .HasColumnType("int");

                    b.Property<int>("AttthF")
                        .HasColumnName("ATTTH_F")
                        .HasColumnType("int");

                    b.Property<int>("AttthM")
                        .HasColumnName("ATTTH_M")
                        .HasColumnType("int");

                    b.Property<int>("AttunkF")
                        .HasColumnName("ATTUNK_F")
                        .HasColumnType("int");

                    b.Property<int>("AttunkM")
                        .HasColumnName("ATTUNK_M")
                        .HasColumnType("int");

                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Bw2500lessF")
                        .HasColumnName("BW2500LESS_F")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500lessM")
                        .HasColumnName("BW2500LESS_M")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500upF")
                        .HasColumnName("BW2500UP_F")
                        .HasColumnType("int");

                    b.Property<int>("Bw2500upM")
                        .HasColumnName("BW2500UP_M")
                        .HasColumnType("int");

                    b.Property<int>("BwnkF")
                        .HasColumnName("BWNK_F")
                        .HasColumnType("int");

                    b.Property<int>("BwnkM")
                        .HasColumnName("BWNK_M")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("LbtclF")
                        .HasColumnName("LBTCL_F")
                        .HasColumnType("int");

                    b.Property<int>("LbtclM")
                        .HasColumnName("LBTCL_M")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("NdelhfBhsf")
                        .HasColumnName("NDELHF_BHSF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfBhsm")
                        .HasColumnName("NDELHF_BHSM")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfHospf")
                        .HasColumnName("NDELHF_HOSPF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfHospm")
                        .HasColumnName("NDELHF_HOSPM")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfLyf")
                        .HasColumnName("NDELHF_LYF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfLym")
                        .HasColumnName("NDELHF_LYM")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfRhuf")
                        .HasColumnName("NDELHF_RHUF")
                        .HasColumnType("int");

                    b.Property<int>("NdelhfRhum")
                        .HasColumnName("NDELHF_RHUM")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidHmf")
                        .HasColumnName("NDELNID_HMF")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidHmm")
                        .HasColumnName("NDELNID_HMM")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidOtf")
                        .HasColumnName("NDELNID_OTF")
                        .HasColumnType("int");

                    b.Property<int>("NdelnidOtm")
                        .HasColumnName("NDELNID_OTM")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfHospf")
                        .HasColumnName("ODELHF_HOSPF")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfHospm")
                        .HasColumnName("ODELHF_HOSPM")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfOtf")
                        .HasColumnName("ODELHF_OTF")
                        .HasColumnType("int");

                    b.Property<int>("OdelhfOtm")
                        .HasColumnName("ODELHF_OTM")
                        .HasColumnType("int");

                    b.Property<int>("PoutAbf")
                        .HasColumnName("POUT_ABF")
                        .HasColumnType("int");

                    b.Property<int>("PoutAbm")
                        .HasColumnName("POUT_ABM")
                        .HasColumnType("int");

                    b.Property<int>("PoutFdf")
                        .HasColumnName("POUT_FDF")
                        .HasColumnType("int");

                    b.Property<int>("PoutFdm")
                        .HasColumnName("POUT_FDM")
                        .HasColumnType("int");

                    b.Property<int>("PoutLbf")
                        .HasColumnName("POUT_LBF")
                        .HasColumnType("int");

                    b.Property<int>("PoutLbm")
                        .HasColumnName("POUT_LBM")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("NatalityTCL");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.OtherIndicators", b =>
                {
                    b.Property<int?>("ActF")
                        .HasColumnName("ACT_F")
                        .HasColumnType("int");

                    b.Property<string>("ActInd")
                        .HasColumnName("ACT_IND")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ActM")
                        .HasColumnName("ACT_M")
                        .HasColumnType("int");

                    b.Property<string>("Program")
                        .HasColumnName("PROGRAM")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("OtherIndicators");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.OtherPrograms", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("Program")
                        .HasColumnName("PROGRAM")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("OtherPrograms");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.PasteErrors", b =>
                {
                    b.Property<string>("Field0")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("Paste Errors");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Population", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("EndPopFil")
                        .HasColumnName("END_POP_FIL")
                        .HasColumnType("int");

                    b.Property<int?>("EndPopMal")
                        .HasColumnName("END_POP_MAL")
                        .HasColumnType("int");

                    b.Property<int?>("EndPopSch")
                        .HasColumnName("END_POP_SCH")
                        .HasColumnType("int");

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("NoHh")
                        .HasColumnName("NO_HH")
                        .HasColumnType("int");

                    b.Property<int?>("PopBgy")
                        .HasColumnName("POP_BGY")
                        .HasColumnType("int");

                    b.Property<string>("PopYear")
                        .IsRequired()
                        .HasColumnName("POP_YEAR")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .IsRequired()
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Population");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.PrintOut", b =>
                {
                    b.Property<string>("PrtOut")
                        .IsRequired()
                        .HasColumnName("PRT_OUT")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("PrintOut");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.ProvDate", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("BgyDate")
                        .HasColumnName("BGY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("MunCode")
                        .IsRequired()
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvDesc")
                        .HasColumnName("PROV_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegDesc")
                        .HasColumnName("REG_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Prov_Date");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.ProvDate1", b =>
                {
                    b.Property<string>("BgyCode")
                        .IsRequired()
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("BgyDate")
                        .HasColumnName("BGY_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvDesc")
                        .HasColumnName("PROV_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegDesc")
                        .IsRequired()
                        .HasColumnName("REG_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Prov_Date1");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Province", b =>
                {
                    b.Property<string>("ProvCode")
                        .IsRequired()
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvDesc")
                        .IsRequired()
                        .HasColumnName("PROV_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Province");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Region", b =>
                {
                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegDesc")
                        .IsRequired()
                        .HasColumnName("REG_DESC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("Region");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Schistosomiasis", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CaserefF")
                        .HasColumnName("CASEREF_F")
                        .HasColumnType("int");

                    b.Property<int>("CaserefM")
                        .HasColumnName("CASEREF_M")
                        .HasColumnType("int");

                    b.Property<int>("CasetxF")
                        .HasColumnName("CASETX_F")
                        .HasColumnType("int");

                    b.Property<int>("CasetxM")
                        .HasColumnName("CASETX_M")
                        .HasColumnType("int");

                    b.Property<int>("CasexF")
                        .HasColumnName("CASEX_F")
                        .HasColumnType("int");

                    b.Property<int>("CasexHighF")
                        .HasColumnName("CASEX_HIGH_F")
                        .HasColumnType("int");

                    b.Property<int>("CasexHighM")
                        .HasColumnName("CASEX_HIGH_M")
                        .HasColumnType("int");

                    b.Property<int>("CasexLowF")
                        .HasColumnName("CASEX_LOW_F")
                        .HasColumnType("int");

                    b.Property<int>("CasexLowM")
                        .HasColumnName("CASEX_LOW_M")
                        .HasColumnType("int");

                    b.Property<int>("CasexM")
                        .HasColumnName("CASEX_M")
                        .HasColumnType("int");

                    b.Property<int>("CasexMedF")
                        .HasColumnName("CASEX_MED_F")
                        .HasColumnType("int");

                    b.Property<int>("CasexMedM")
                        .HasColumnName("CASEX_MED_M")
                        .HasColumnType("int");

                    b.Property<int>("CompcaseF")
                        .HasColumnName("COMPCASE_F")
                        .HasColumnType("int");

                    b.Property<int>("CompcaseM")
                        .HasColumnName("COMPCASE_M")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PoscaseF")
                        .HasColumnName("POSCASE_F")
                        .HasColumnType("int");

                    b.Property<int>("PoscaseHighF")
                        .HasColumnName("POSCASE_HIGH_F")
                        .HasColumnType("int");

                    b.Property<int>("PoscaseHighM")
                        .HasColumnName("POSCASE_HIGH_M")
                        .HasColumnType("int");

                    b.Property<int>("PoscaseLowF")
                        .HasColumnName("POSCASE_LOW_F")
                        .HasColumnType("int");

                    b.Property<int>("PoscaseLowM")
                        .HasColumnName("POSCASE_LOW_M")
                        .HasColumnType("int");

                    b.Property<int>("PoscaseM")
                        .HasColumnName("POSCASE_M")
                        .HasColumnType("int");

                    b.Property<int>("PoscaseMedF")
                        .HasColumnName("POSCASE_MED_F")
                        .HasColumnType("int");

                    b.Property<int>("PoscaseMedM")
                        .HasColumnName("POSCASE_MED_M")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("SympcaseF")
                        .HasColumnName("SYMPCASE_F")
                        .HasColumnType("int");

                    b.Property<int>("SympcaseM")
                        .HasColumnName("SYMPCASE_M")
                        .HasColumnType("int");

                    b.ToTable("Schistosomiasis");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Sti", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Ps1")
                        .HasColumnName("PS1")
                        .HasColumnType("int");

                    b.Property<int>("Ps2")
                        .HasColumnName("PS2")
                        .HasColumnType("int");

                    b.Property<int>("Ps3")
                        .HasColumnName("PS3")
                        .HasColumnType("int");

                    b.Property<int>("Ps4")
                        .HasColumnName("PS4")
                        .HasColumnType("int");

                    b.Property<string>("RegCode")
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("STI");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.SwitchboardItems", b =>
                {
                    b.Property<string>("Argument")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Command")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("ItemText")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("SwitchboardId")
                        .HasColumnName("SwitchboardID")
                        .HasColumnType("int");

                    b.ToTable("SwitchboardItems");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Tuberculosis", b =>
                {
                    b.Property<string>("BgyCode")
                        .HasColumnName("BGY_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("MunCode")
                        .HasColumnName("MUN_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("NewsmearF")
                        .HasColumnName("NEWSMEAR_F")
                        .HasColumnType("int");

                    b.Property<int>("NewsmearM")
                        .HasColumnName("NEWSMEAR_M")
                        .HasColumnType("int");

                    b.Property<int>("NwsmearposF")
                        .HasColumnName("NWSMEARPOS_F")
                        .HasColumnType("int");

                    b.Property<int>("NwsmearposM")
                        .HasColumnName("NWSMEARPOS_M")
                        .HasColumnType("int");

                    b.Property<string>("ProvCode")
                        .HasColumnName("PROV_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegCode")
                        .HasColumnName("REG_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("SmearetCuredF")
                        .HasColumnName("SMEARET_CURED_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetCuredM")
                        .HasColumnName("SMEARET_CURED_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetCuredRadF")
                        .HasColumnName("SMEARET_CURED_RAD_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetCuredRadM")
                        .HasColumnName("SMEARET_CURED_RAD_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetCuredRelF")
                        .HasColumnName("SMEARET_CURED_REL_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetCuredRelM")
                        .HasColumnName("SMEARET_CURED_REL_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetCuredTxfF")
                        .HasColumnName("SMEARET_CURED_TXF_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetCuredTxfM")
                        .HasColumnName("SMEARET_CURED_TXF_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetF")
                        .HasColumnName("SMEARET_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetM")
                        .HasColumnName("SMEARET_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetOtbF")
                        .HasColumnName("SMEARET_OTB_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetOtbM")
                        .HasColumnName("SMEARET_OTB_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetRadF")
                        .HasColumnName("SMEARET_RAD_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetRadM")
                        .HasColumnName("SMEARET_RAD_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetRelF")
                        .HasColumnName("SMEARET_REL_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetRelM")
                        .HasColumnName("SMEARET_REL_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearetTxfF")
                        .HasColumnName("SMEARET_TXF_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearetTxfM")
                        .HasColumnName("SMEARET_TXF_M")
                        .HasColumnType("int");

                    b.Property<int>("SmearposF")
                        .HasColumnName("SMEARPOS_F")
                        .HasColumnType("int");

                    b.Property<int>("SmearposM")
                        .HasColumnName("SMEARPOS_M")
                        .HasColumnType("int");

                    b.Property<int>("TbAllF")
                        .HasColumnName("TB_ALL_F")
                        .HasColumnType("int");

                    b.Property<int>("TbAllM")
                        .HasColumnName("TB_ALL_M")
                        .HasColumnType("int");

                    b.Property<int>("TbsympF")
                        .HasColumnName("TBSYMP_F")
                        .HasColumnType("int");

                    b.Property<int>("TbsympM")
                        .HasColumnName("TBSYMP_M")
                        .HasColumnType("int");

                    b.Property<int>("TotTbF")
                        .HasColumnName("TOT_TB_F")
                        .HasColumnType("int");

                    b.Property<int>("TotTbM")
                        .HasColumnName("TOT_TB_M")
                        .HasColumnType("int");

                    b.ToTable("Tuberculosis");
                });

            modelBuilder.Entity("EFHSIS.Models.EFHSISModels.Useraccounts", b =>
                {
                    b.Property<string>("Aclev")
                        .HasColumnName("aclev")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("LngEmpId")
                        .HasColumnName("lngEmpID")
                        .HasColumnType("int");

                    b.Property<string>("Pwd")
                        .HasColumnName("pwd")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Usname")
                        .HasColumnName("usname")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("useraccounts");
                });

            modelBuilder.Entity("EFHSIS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("EFHSIS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("EFHSIS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFHSIS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("EFHSIS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
